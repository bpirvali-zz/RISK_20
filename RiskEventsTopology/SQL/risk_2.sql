CREATE SCHEMA BRE;

DROP TABLE BRE.INCOMING_RISK_EVENTS;
CREATE TABLE BRE.INCOMING_RISK_EVENTS 
(
	SYSTEM_ID     					INTEGER NOT NULL
	, EVENT_CATEGORY_ID				INTEGER NOT NULL
	, IHUB_MERCHANT_ID				NUMBER NOT NULL
	, WORKER_ID						INTEGER NOT NULL	
	, MERCHANT_ACCOUNT_NUMBER 		VARCHAR(64) NOT NULL
	, EVENT_DATE					DATE	
	, EVENT_TYPE_ID					INTEGER NOT NULL
	, EVENT_ID 						INTEGER NOT NULL
	, EVENT_DETAILS					VARCHAR(1024)	
	, RETRIES						INTEGER	DEFAULT -1 NOT NULL
	, PROCESSING_STATUS				INTEGER DEFAULT 0 NOT NULL 
	, ERROR_MSG						VARCHAR(4000) DEFAULT '' 
	, EVENT_TIMESTAMP				TIMESTAMP NOT NULL	
	, TIME_QUEUED					TIMESTAMP	
	, TIME_DEQUEUED				TIMESTAMP NOT NULL
	, TIME_PROCESSED				TIMESTAMP
	, TIME_RETRY_1					TIMESTAMP
	, TIME_RETRY_2					TIMESTAMP
	, PRIMARY KEY(SYSTEM_ID, MERCHANT_ACCOUNT_NUMBER, EVENT_TIMESTAMP, EVENT_CATEGORY_ID, EVENT_TYPE_ID, EVENT_ID)
);

CREATE INDEX BRE.INCOMING_RISK_EVENTS_IDX_1
ON BRE.INCOMING_RISK_EVENTS
(PROCESSING_STATUS, RETRIES, WORKER_ID, EVENT_CATEGORY_ID, EVENT_TYPE_ID);

GRANT DELETE, INSERT, SELECT, UPDATE ON BRE.INCOMING_RISK_EVENTS TO OASIS_QA, OASIS_DEV;

DROP TABLE BRE.INCOMING_RISK_EVENT_ERROR;
CREATE TABLE BRE.INCOMING_RISK_EVENT_ERROR
(
    RISK_EVENT_ERROR_IDENTIFIER RAW(16) DEFAULT SYS_GUID() NOT NULL,
    SYSTEM_IDENTIFIER INTEGER,
    EVENT_CATEGORY_IDENTIFIER INTEGER,
    EVENT_TYPE_IDENTIFIER INTEGER,
    EVENT_IDENTIFIER INTEGER,
    MERCHANT_ACCOUNT_NUMBER VARCHAR2(32),
    EVENT_TIMESTAMP TIMESTAMP,
    ERROR_LEVEL VARCHAR2(20) NOT NULL,
    ERROR_TIMESTAMP TIMESTAMP NOT NULL,
    ERROR_TEXT VARCHAR2(2000) NOT NULL,
    XML_PAYLOAD VARCHAR2(2000)
);
 
CREATE INDEX BRE.RISK_EVENT_ERROR_IDX1
ON BRE.INCOMING_RISK_EVENT_ERROR
(MERCHANT_ACCOUNT_NUMBER, EVENT_TIMESTAMP);
 
CREATE UNIQUE INDEX BRE.INCOMING_RISK_EVENT_ERROR_PK
ON BRE.INCOMING_RISK_EVENT_ERROR
(RISK_EVENT_ERROR_IDENTIFIER);
 
ALTER TABLE BRE.INCOMING_RISK_EVENT_ERROR
ADD CONSTRAINT INCOMING_RISK_EVENT_ERROR_PK PRIMARY KEY
(RISK_EVENT_ERROR_IDENTIFIER)
USING INDEX BRE.INCOMING_RISK_EVENT_ERROR_PK;
 
GRANT DELETE, INSERT, SELECT, UPDATE ON BRE.INCOMING_RISK_EVENT_ERROR TO OASIS_QA, OASIS_DEV;

DROP TABLE BRE.RISK_2_CONF;
CREATE TABLE BRE.RISK_2_CONF 
(
	KEY VARCHAR(128) NOT NULL
	, VALUE VARCHAR(1024) 
	, PRIMARY KEY(KEY)
);

GRANT DELETE, INSERT, SELECT, UPDATE ON BRE.RISK_2_CONF TO OASIS_QA, OASIS_DEV;

INSERT INTO BRE.RISK_2_conf VALUES('sre_no_workers', '4');
INSERT INTO BRE.RISK_2_conf VALUES('sre_no_spouts',  '4');
INSERT INTO BRE.RISK_2_conf VALUES('sre_no_bolts',   '8');
INSERT INTO BRE.RISK_2_conf VALUES('sre_retries', '1');
INSERT INTO BRE.RISK_2_conf VALUES('sre_spout_sleep_secs', '5');
INSERT INTO BRE.RISK_2_conf VALUES('sre_spout_heart_beat_sleeps', '60');
INSERT INTO BRE.RISK_2_conf VALUES('sre_batch_size', '1000');
INSERT INTO BRE.RISK_2_conf VALUES('sre_topology_message_timeout_secs', '120');
INSERT INTO BRE.RISK_2_conf VALUES('sre_topology_max_spout_pending', '100');
INSERT INTO BRE.RISK_2_conf VALUES('sre_debug', 'true');
INSERT INTO BRE.RISK_2_conf VALUES('sre_fake_hang_secs', '0');
COMMIT;

DROP TABLE BRE.MERCHANT_ALERTS;
CREATE TABLE BRE.MERCHANT_ALERTS
(
  EID                           INTEGER NOT NULL,
  MERCHANT_ACCOUNT_NUMBER       VARCHAR(64) NOT NULL,
  ALERT_TIMESTAMP               TIMESTAMP NOT NULL,
  BATCH_CYCLE_DATE              TIMESTAMP NOT NULL,
  CASE_TYPE                     VARCHAR(20 ),
  ALERT_TYPE                    VARCHAR(20 ),
  WORK_QUEUE                    VARCHAR(50 ),
  RULE_NAME                     VARCHAR(128) NOT NULL,
  RULE_VERSIONID                VARCHAR(20 ),
  RULE_DESCRIPTION              VARCHAR(2000 ),
  RULE_ACTUALVALUE              VARCHAR(2000 ),
  RULE_SET                      VARCHAR(2000 ),
  WORK_QUEUE_CATEGORY           VARCHAR(80 ),
  ALERT_STATUS                  VARCHAR(20 ),
  MERCHANT_EID                  INTEGER,
  SYSTEM_IDENTIFIER             VARCHAR(20 ),
  ALERT_IDENTIFIER              VARCHAR(50 ),
  PRIMARY KEY (MERCHANT_ACCOUNT_NUMBER, ALERT_TIMESTAMP, RULE_NAME)
);

GRANT DELETE, INSERT, SELECT, UPDATE ON BRE.MERCHANT_ALERTS TO OASIS_QA, OASIS_DEV;
